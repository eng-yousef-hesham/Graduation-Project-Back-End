package org.gp.civiceye.service.impl;

import org.gp.civiceye.mapper.citizen.CreateCitizenDTO;
import org.gp.civiceye.repository.CitizenRepository;
import org.gp.civiceye.repository.entity.*;
import org.gp.civiceye.service.CitizenService;
import org.gp.civiceye.mapper.citizen.CitizenDTO;
import org.gp.civiceye.service.impl.admin.AddAdminResult;
import org.gp.civiceye.service.impl.admin.AdminType;
import org.gp.civiceye.service.impl.citizen.AddCitizenResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class CitizenServiceImpl implements CitizenService {

    private CitizenRepository citizenRepository;
    private final PasswordEncoder passwordEncoder;

    @Autowired
    public CitizenServiceImpl(CitizenRepository citizenrepository, PasswordEncoder passwordEncoder) {
        this.citizenRepository = citizenrepository;
        this.passwordEncoder = passwordEncoder;
    }

    @Override
    public List<CitizenDTO> GetAllCitizens() {
        return citizenRepository.findAll().stream()
                .map(CitizenDTO::new)
                .collect(Collectors.toList());
    }

    @Override
    public AddCitizenResult addCitizen(CreateCitizenDTO citizenData) {

        String password = citizenData.getHashPassword();
        String encodedPassword = passwordEncoder.encode(password);
        citizenData.setHashPassword(encodedPassword);


        Citizen citizen = Citizen.builder()
                .nationalId(citizenData.getNationalId())
                .firstName(citizenData.getFirstName())
                .lastName(citizenData.getLastName())
                .email(citizenData.getEmail())
                .passwordHash(citizenData.getHashPassword())
                .age(citizenData.getAge())
                .isActive(true)
                .build();

        CitizenRepository.Save(citizen);
        return new AddCitizenResult(true, "Citizen created successfully");
    }
}
